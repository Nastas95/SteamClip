name: Build SteamClip Test builds

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            script: steamclip_TEST.py
            output: steamclip
          - os: windows-latest
            script: steamclip_TEST.py
            output: steamclip.exe
            icon: SteamClip.ico

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install system dependencies for Qt (Linux)
      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb-cursor0 \
            libxcb-xinerama0 \
            libxcb-randr0 \
            libxcb-shape0 \
            libxcb-xfixes0 \
            libxcb-render0 \
            libxcb-shm0 \
            libxcb-sync1 \
            libx11-xcb1 \
            libgl1 \
            libegl1 \
            libfontconfig1 \
            libfreetype6

      # Install Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Install PyInstaller
      - name: Install PyInstaller
        run: pip install pyinstaller

      # Build executable
      - name: Build executable (Linux)
        if: runner.os == 'Linux'
        run: pyinstaller --onefile --name "${{ matrix.output }}" "${{ matrix.script }}"

      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        run: pyinstaller --onefile --icon "${{ matrix.icon }}" --name "${{ matrix.output }}" "${{ matrix.script }}"

      # Debug: list files
      - name: List dist folder
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            ls -l dist
          else
            dir dist
          fi

      # Upload artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: dist/${{ matrix.output }}
