name: Build SteamClip Test builds

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            script: steamclip_TEST.py
            output: steamclip
          - os: windows-latest
            script: steamclip_TEST.py
            output: steamclip.exe
            icon: SteamClip.ico

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Install system dependencies for Qt (Linux only)
      - name: Install system libraries (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb-cursor0 \
            libxkbcommon-x11-0 \
            libxcb-xinerama0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-render-util0

      # Install dependencies Linux
      - name: Install Python dependencies (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Install dependencies Windows
      - name: Install Python dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }

      # Install PyInstaller
      - name: Install PyInstaller
        run: pip install pyinstaller

      # Build executable Linux
      - name: Build executable (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          # Percorso dei plugin Qt6 (incluso platforms/)
          PLATFORM_PATH=$(python3 -c 'import PyQt6, os; print(os.path.join(os.path.dirname(PyQt6.__file__), "Qt6", "plugins", "platforms") + ":platforms")')
          echo "Including Qt platform plugins from: $PLATFORM_PATH"

          pyinstaller \
            --onefile \
            --name "${{ matrix.output }}" \
            --add-data "$PLATFORM_PATH" \
            "${{ matrix.script }}"

      # Build executable Windows
      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        run: |
          pyinstaller --onefile `
            --icon "${{ matrix.icon }}" `
            --name "${{ matrix.output }}" `
            "${{ matrix.script }}"

      # Debug: list files in dist
      - name: List dist folder (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: ls -l dist

      - name: List dist folder (Windows)
        if: runner.os == 'Windows'
        run: dir dist

      # Upload single-file artifacts
      - name: Upload Linux artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: dist/${{ matrix.output }}

      - name: Upload Windows artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: dist/${{ matrix.output }}
